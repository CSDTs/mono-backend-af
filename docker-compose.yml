version: "3.7"

services:
  csdt_neo4j:
    image: neo4j:3.5.3
    hostname: csdt_neo4j
    container_name: neo4j
    ports:
      - 7474:7474
      - 7687:7687
    volumes:
      - ./neo4j/data:/data
      - ./neo4j/logs:/logs
      - ./neo4j/import:/var/lib/neo4j/import
      - ./neo4j/plugins:/plugins
    environment:
      - NEO4J_AUTH=${CSDT_USER}/${CSDT_PASSWORD}
    env_file:
      - .env

  address_service:
    build: ./address-service
    command: uvicorn app.main:app --reload --host 0.0.0.0 --port 8000
    volumes:
      - ./address-service/:/app/
      - ./address-service/data/:/data/
    ports:
      - 8001:8000
    environment:
      - DATA_PREFIX=/app
      - SERVICE_PATH=/api/v1/addresses

  eeio_service:
    build:
      context: ./eco-service
      dockerfile: Dockerfile.eeio-api
    # command: uvicorn app.main:app --reload --host 0.0.0.0 --port 8000
    volumes:
      - ./eco-service/:/app/
      - ./eco-service/data/:/data/
    ports:
      - 8003:8000
    environment:
      - DATA_PREFIX=/app
      - SERVICE_PATH=/api/v1/eeio

  eco_service:
    build:
      context: ./eco-service
      dockerfile: Dockerfile.eco-social-api
    command: uvicorn app.main:app --reload --host 0.0.0.0 --port 8000
    volumes:
      - ./eco-service/:/app/
      - ./eco-service/data/:/data/
    ports:
      - 8002:8000
    environment:
      - DATA_PREFIX=/app
      - SERVICE_PATH=/api/v1/eco
      - USEEIO_API_HOST= http://eeio_service:7070/api
    depends_on:
      - eeio_service

  product_service:
    build:
      context: ./product-service
      dockerfile: Dockerfile.web
    command: uvicorn app.main:app --reload --host 0.0.0.0 --port 8000
    volumes:
      - ./product-service/:/app/

    env_file:
      - .env
    environment:
      - DATA_PREFIX=/app
      - SERVICE_PATH=/api/v1/products
    depends_on:
      - csdt_neo4j
      - eco_service
    ports:
      - 8004:8000

  wordpress:
    image: wordpress:latest
    restart: always
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_CONFIG_EXTRA: |
        define('WP_SITEURL', 'http://localhost:8080');
        define('WP_HOME', 'http://localhost:8080');
    volumes:
      - ./backend:/var/www/html
    depends_on:
      - db

  db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress
      MYSQL_RANDOM_ROOT_PASSWORD: "1"

  routing_service:
    build: ./routing-service
    command: osrm-routed --algorithm mld -t 32 --port 8000 /data/michigan-latest.osrm
    ports:
      - 8005:8000
    environment:
      - DATA_PREFIX=/app
      - SERVICE_PATH=/api/v1/routing
  nginx:
    image: nginx:latest
    ports:
      - "8080:8080"
    volumes:
      - ./nginx_config.conf:/etc/nginx/conf.d/default.conf
      - ./backend:/var/www/html
    depends_on:
      - address_service
      - eco_service
      - product_service
      - wordpress
      - routing_service

volumes:
  backend:
